# Copyright (c) 2012-2018, The CryptoNote developers, The Bytecoin developers.
# Licensed under the GNU Lesser General Public License. See LICENSE for details.

from sys import argv
from zlib import crc32

output = "CRC32.cpp"

# When changing the script, run and commit artefacts

crc32_reverse = [0]
for i in range(1, 256):
    v = (crc32_reverse[i >> 1] << 1) ^ ((i & 1) << 32)
    crc32_reverse.append(v if v & (1 << 32) == 0 else v ^ 0x1db710641)

with open(output, 'w', encoding='ASCII', newline='') as fd:
    fd.write(
f'''// This file is generated by CRC32_generate.py.
#include <cstdint>

#include "CRC32.hpp"

namespace common {{

const uint32_t crc32_table[] = {{{', '.join(f'{crc32(bytes((i,)))}' for i in range(256))}}};

const uint32_t crc32_reverse_table[] = {{{', '.join(f'{i ^ 0xff}' for i in reversed(crc32_reverse))}}};

}}''')